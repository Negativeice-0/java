Below is a simple example of class inheritance in Java.
Here, MountainBike is a subclass (or child class) that extends the Bicycle superclass (or parent class).
This means that MountainBike inherits all fields and methods from Bicycle.
In this example, MountainBike has an additional field suspension and a method adjustSuspension(). 
The super() function in the constructor is used to call the parent classâ€™s constructor.
Is there anything else you would like to know about Java inheritance?

package com.inheritance

  class Bicycle {
  int cadence = 0;
  int speed = 0;
  int gear = 1;

  void changeCadence(int newValue) {
    cadence = newValue;
  }
void changeGear(int newValue) {
  gear = newValue;
  }
void speedUp(int increment) {
  speed = speed + increment;
}
void applyBrakes(int decrement) {
  speed = speed - decrement;
}
 void printStates() {
  System.out.println(
    "cadence: " + cadence +
    "speed: " + speed +
    "gear: " + gear
  ); 
 }
}
  
  class MountainBike extends Bicycle {
    int suspension;

    MountainBike(int startHeight, int startSpeed, int startGear, int startSuspension){
        super(startHeight, startSpeed, startGear);
        suspension = startSuspension;
    }

    void adjustSuspension(int newValue) {
        suspension = newValue;
    }
}
